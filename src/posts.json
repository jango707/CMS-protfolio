[{"id":1666791720,"title":"Space Box Beat (Mash Up game Jam 2022)\r","date":"October 26, 2022","time":"14:42","thumbnail":"/images/screenshot-2022-10-23-234724.jpeg\r","content":"T﻿his game was created for the annual MashUp Game Jam. The theme of this jam was autogenerated and outputted: \r\n\r\n\\-﻿ >Rhythm - Reflection - Space - Box\r\n\r\nT﻿he game can be played in the browser and was built by myself over the course of a weekend.","demo":"https://jango707.itch.io/space-box-beat\r","description":"Direct energy beams towards their suns. A crazy rhytmic spaceship\r"},{"id":1638106500,"title":"Get Out (GUH 2021 submission)\r","date":"November 28, 2021","time":"13:35","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/001/755/581/datas/medium.png\r","content":"The website allows a customer who wants to rent a car to find out how long it will take to pass through security in the airport they are arriving at (with a mean squared error of 2.38) and how long it will take to get from the airport to the rental depot depending on the means of transportation they are going to use (with a mean squared error of 1.15). However, all of a sudden the Nuclear Fallout begins so an alert pops up on the screen and the user is being prompted with useful information on tips to survive: places to escape to and objects he could use for protection.\r\n\r\n#### How we built it\r\n\r\nWe implemented a deep learning model for predicting the times in python using TensorFlow. Then we hosted the model on Google App Engine using a Flask server. The user interface was implemented in React and hosted on Netlify. Several API calls were made to convert the airport code into coordinates and city names. Additionally, we used external APIs to find closeby cities that we can recommend to the user.","demo":"https://www.youtube.com/watch?v=rMMyuKlneEg\r","description":"Know how long it takes to get out of the airport and to your rental car.\r"},{"id":1637323920,"title":"3D scanning and Surface Detection\r","date":"November 19, 2021","time":"12:12","thumbnail":"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.andreasjakl.com%2Fwp-content%2Fuploads%2F2017%2F11%2FARCore-Brain.jpg&f=1&nofb=1\r","content":"I decided to experiment some time on AR and 3D scanning. I used an app called display.land to scan random objects around my place and decided to get a full on scan on a school project. Check out the pics below, I used Google's ARCore and Android Studios to develop the app. Once you scan the object with the app, you can import it to your laptop and edit it using blender. Finally you put it all together in Android Studios, using AR Fragments and their surface detection API to make an instance of the 3D object appear when you click on a surface. Have fun, Can you tell which is the real and the fake one?","demo":"https://github.com/jango707/Surface-Detection\r","description":"3D scanning onjects and duplicating them on recognized surfaces\r"},{"id":1615291560,"title":"WaterWatch (TreeHacks 2021)\r","date":"March 09, 2021","time":"12:06","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/001/396/335/datas/gallery.jpg\r","content":"**WaterWatch** is an app on the *Apple Watch* that allows the user to press buttons on actions that uses water and sends that data to a database. This data can be seen on a web app and shows a bucket of how much water you should use on daily basis. Depending on how much is used, the bucket will show what is left and will allow the user to 'water a tree'. This tree can grow depending on how much water is fed to it. The goal of the user is to keep their water consumption at a sustainable level and allow enough water in their bucket to feed the tree and let it grow.\r\n\r\n#### How we built it\r\n\r\nWe built an Apple Watch App that connects to a Firebase database, which is accessed by a ReactJS app. We built the App with XCode and Swift for WearOS, and the web app is built using React and hosted over Firebase.","demo":"https://www.youtube.com/watch?v=yOAbfYdX8DY&t=1s\r","description":"Watch your water consumption on your wrist.\r"},{"id":1613649780,"title":"SnackSnap (StartHack 2021)\r","date":"February 18, 2021","time":"12:03","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/001/440/927/datas/gallery.jpg\r","content":"SnackSnap displays calories in an unorthodox way where user gets to see examples of some physical activities, they would need to pursue in order to burn the given calories. This is done in order to support users to avoid eating snacks. The minutes needed for each physical activity is acquired by using a formula which depends on the body measurements of the user, Metabolic Equivalent for Task (MET) different for each exercise and the calories needed to be burnt. Furthermore, it allows users to keep track of their snacking habits by utilising another functionality, SnackLog.\r\n\r\n#### How we built it\r\n\r\nWe coded in Android Studio by using Flutter to build the application and Firebase to connect with the database. Furthermore, we used Framer to create the prototype designs.","demo":"https://www.youtube.com/watch?v=n07AQdgnil0&t=1s\r","description":"A mobile app that converts a picture of a snack into calories and\r"},{"id":1605182280,"title":"SmartPy (Great Uni Hack 2020)\r","date":"November 12, 2020","time":"11:58","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/001/298/998/datas/gallery.jpg\r","content":"SmartPy takes any text input paragraph and uses NLP to find the keywords in the text. It then checks the frequency of these words and lists the most important ones together with their definitions. It then compiles these into \"Q\" cards where students can test their knowledge on the given paragraph. They can hover over the cards to reveal their definitions and test themselves. The idea is that people paste pages from their textbook or their notes into the box, and then we can create tests for each individual page. This will give them a great way to regularly test themselves on content they have learned.\r\n\r\n### How we built it\r\n\r\nWe first started using NLP libraries in basic python to find the keywords in text. While doing this we worked on creating a Django server and building the front end of the site. We then found an API for getting definitions of the keywords. Once we had the parts ready we integrated it all together and made it look pretty!\r\n\r\nCheck out the devpost entry: <https://devpost.com/software/smartpy>","demo":"https://www.youtube.com/watch?v=0jAazC94Dh4\r","description":"An app that produces automated test flashcards for any text input.\r"},{"id":1600332660,"title":"Vaccination API (Hack Kosice 2020)\r","date":"September 17, 2020","time":"09:51","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/001/208/985/datas/gallery.jpg\r","content":"#### Inspiration\r\n\r\nWe were inspired by the lack of collective information regarding the vaccination requirements for each country and the detailed description for each of these vaccinations.\r\n\r\n#### What it does\r\n\r\nThe Vaccination API gets a vaccine information by requiring its name and returns its description, possible side effects, duration, administration, medical consideration (optional), whether it is required in an early age (optional). Also it gets the country requirements by the three lettered country code and returns the vaccinations required by the government, the vaccinations recommended by the government and a travel advise.\r\n\r\n#### How we built it\r\n\r\nTo create this web app we are running the MERN stack, meaning MongoDB, Express, React and NodeJS. We initially built the whole app in NodeJS but then decided that we needed to have a way to show what we had created so the React app is being build and then hosted statically by express. All of this is being hosted on Heroku which hosts the front and backend on the same IP and port. We are also using MongoDB atlas so that our data is backed up and secure.\r\n\r\nCenters for Disease Control and Prevention, Vaccines by Diaseases, <https://www.cdc.gov/vaccines/vpd/vaccines-diseases.html> has been used for the information regarding each vaccination. Travel recommendation data has been used from this site: <https://travelhealthpro.org.uk/country/>","demo":"https://www.youtube.com/watch?v=tlS9eef9g_w&t=47s\r","description":"An API to give descriptions and recommendations of vaccines based on different countries.\r"},{"id":1589531880,"title":"Spikes To Heaven\r","date":"May 15, 2020","time":"09:38","thumbnail":"https://img.itch.zone/aW1nLzM1OTQ4ODAucG5n/original/52XZNk.png\r","content":"Spikes To Heaven is the ultimate proof if you are allowed to heaven...\r\n\r\nJokes aside, spikes to heaven is a strategy platformer where you need to reach heaven, however the road is very spiky and hard, only the most worthy can make it.\r\n\r\nThe fun part of the game is that at the start you need to choose the size of your player. Each size has certain pros and cons, but at the end you will have a favourite playing style, according to a size. For example, the tiny size can jump very high, but does not have much life. \r\n\r\nIt is your challenge to find which size is perfect for you to reach heaven. \r\n\r\nEnjoy the game!\r\n\r\nRun it in your browser here  <https://jango707.itch.io/spikes-to-heaven>","demo":"https://jango707.itch.io/spikes-to-heaven\r","description":"Submission for the Mash-Up Game Jam 2020\r"},{"id":1586427360,"title":"ML Agents in Unity\r","date":"April 09, 2020","time":"11:16","thumbnail":"https://miro.medium.com/max/1838/0*KmPbgziBkWiH-vJ8\r","content":"I trained my laptop for 15 minutes, using the Unity ML-Agents Toolkit and Python libraries TensorFlow to perform this training.I won't explain how that works, so in case you want to know, I will point you to online documentations, there are great and not so great tutorials about that.\r\n\r\nAt the end, after only 15 minutes of training, my AI brain was able to score 322 points. That is very good, nice job PC. I wonder what happens if I train for an hour, maybe 5 hours... Could it run infinitely...\\\r\nAnyways, this is a very entry-level project and doesn't really require much training to be done. This will serve as a learning project, and I am already excited to what is next, stay tuned for that!","demo":"https://www.facebook.com/jangoQuarantino/videos/594605007811943/\r","description":"Playing around with Unity ML Agents\r"},{"id":1586336160,"title":"Samaritan (Hack Quarantine 2020)\r","date":"April 08, 2020","time":"09:56","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/001/029/208/datas/gallery.jpg\r","content":"#### Inspiration\r\n\r\nWith the current status of wanting to decrease the spread of Covid-19, many countries have declared social distancing. However, people would still need to buy groceries. We wanted to build a platform that will deter people from going to the grocery store during busy times, as mass gatherings pose a higher risk of contracting the virus. Moreover, we also wanted to help people with a higher risk of severe illness by allowing them to create a reservation of the grocery items they wish to get with the help of a volunteer that poses less risk of severe illness.\r\n\r\n#### How we built it\r\n\r\nWe utilised Firebase to deploy our website and used node.js for our backend and NoSQL for the database. For the frontend, we used HTML, CSS, and Javascript, with jQuery and Bootstrap as frameworks. We ended up writing our own API using Python Flask that would get the busy times of any given supermarket. We hosted this on pythonanywhere.com.","demo":"https://devpost.com/software/samaritan-tf9m50\r","description":"A grocery shopping platform by the people, for the people.\r"},{"id":1584701160,"title":"Self-made Motion Control Game\r","date":"March 20, 2020","time":"10:46","thumbnail":"/images/phonecontroller.png\r","content":"I will let you watch the explanation for yourself:\r\n\r\n<https://www.facebook.com/jangoQuarantino/videos/1319028458300593/>\r\n\r\n\r\n\r\nSummary:\r\n\r\n\\- used Unity and WebSockets written in JS to use my old phone as a video game motion controller\r\n\r\n\\- was lots of fun","demo":"https://www.facebook.com/jangoQuarantino/videos/1319028458300593/\r","description":"A video game that uses your phone as a remote controller!\r"},{"id":1584614460,"title":"VR First Person Shooter\r","date":"March 19, 2020","time":"10:41","thumbnail":"/images/vr.png\r","content":"I proudly present you my first ever VR Game!\\\r\nUsing my self made carboard VR headset, I tested this fabulous game. The goal is to shoot all of the stickmen, you move around using your head and you shoot with your voice. So again, because there is no way for me to input anything into the game (no VR hands), I used the microphone to detect a voice threshold, which will fire the gun.","demo":"https://www.facebook.com/jangoQuarantino/videos/898249617281334/\r","description":"Shoot enemies with a handcrafted VR headset\r"},{"id":1583319540,"title":"FioNa Chat my Bank (HackTheBurgh 2020)\r","date":"March 04, 2020","time":"10:59","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/950/191/datas/gallery.jpg\r","content":"#### Inspiration\r\n\r\nWe were inspired by the the lack of people that have access to financial information and the fact that with an increasingly cashless society people don't know where ATM's are anymore!\r\n\r\n#### What it does\r\n\r\nFor this reason we have build a facebook chatbot that interfaces with the openBanking API to gather financial data about accessable current accounts and ATM. We then use user input to try and match a person to an appropriate account. We also find people the nearest ATM and the most common provider of ATM's in a city.\r\n\r\n#### How we built it\r\n\r\nWe are using Googles DialogueFlow to parse user input. This interfaces with a backend that uses Flask in python that's made publicly available. This backend then interfaces with the OpenBanking API to process and serve relevant data to the DialogueFlow which we can then use to have personalized interactions with the user.","demo":"https://www.youtube.com/watch?v=xLjs5sES27E\r","description":"A chatbot, that brings financial advice closer to the inexperienced user.\r"},{"id":1570696260,"title":"RelaxLane (HackUPC Barcelona submission)\r","date":"October 10, 2019","time":"09:31","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/859/581/datas/gallery.jpg\r","content":"**Inspiration**\r\n\r\nWe really wanted to make something that involved hardware that would interact with software for this hackathon since we wanted to learn more about this. We had a couple of ideas but this one seemed the most practical and appealing.\r\n\r\n**What it does**\r\n\r\nIt is a simple retro-themed multiplayer game that you can play online. The difficulty of the game depends on your heartbeat which we tracked using a Mi Band 2 provided to us by the hackathon organisers. The goal of the game is to remain as calm as possible. The calmer you are, the more rewards you get, and the more stressed out you are the fewer you get. We determine whether you are tired or not by finding your initial heartbeat (when you start the game) and then comparing it to your present heartbeat. This is done by collecting 5 data points on startup and then finding their average.\r\n\r\n**How we built it**\r\n\r\nWe built the backend server for connecting to a Mi Band 2 and then transmitting that data using a mix of JavaScript and Node.js. The two communicated between each other using XMLHTTPRequests. We built the game in C# using Unity","demo":"https://devpost.com/software/relaxlane\r","description":"A mobile multiplayer game that tracks your heartbeat to determine the difficulty.\r"},{"id":1551463920,"title":"Skybox AR Musuems\r","date":"March 01, 2019","time":"18:12","thumbnail":"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fconnect-prd-cdn.unity.com%2F20190112%2Fp%2Fimages%2Fe8c5bb18-5a1a-4e95-97b5-8d842d8a030d_WhatsApp_Image_2019_01_12_at_20.56.59.jpeg&f=1&nofb=1\r","content":"With the Skybox app, you can visit the a museum, scan a sticker next to an exhibition, and then see that exhibition in Augmented Relaity or Virtual Reality.","demo":"https://www.youtube.com/watch?v=xJWxjKOu35k\r","description":"View exhibitions in AR/ VR with the Skybox App\r"},{"id":1538557320,"title":"EventJam (Great Uni Hack 2018)\r","date":"October 03, 2018","time":"10:02","thumbnail":"https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/720/646/datas/gallery.jpg\r","content":"\r\n\r\nWhat better way to pay homage to the 90s than to take inspiration from the classic space jam. With EventJam, the centre of this universe, every planet leads you through a discovery of new and interesting events - where you will very likely meet fellow aliens and monsters for a game of basketball.\r\n\r\nAmidst the modern sleek UI, let us take you through a nostalgic journey of annoying popups, gifs, animations, slow page loads, rainbow backgrounds, default colours, all em good things. Be sure to look for all the Easter eggs that we have hidden!\r\n\r\nSit back, relax, and enjoy the space ride!\r\n\r\nWe built Space Jam using the Ruby on Rails Framework and JavaScript as well.","demo":"https://www.youtube.com/watch?v=STlfEASUOa0&t=2s\r","description":"An event platform in the 90's web theme.\r"}]